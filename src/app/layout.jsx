"use client";
import localFont from "next/font/local";
import "./globals.css";
import i18n from "i18next";
import { initReactI18next } from "react-i18next";
import HttpApi from "i18next-http-backend";
import { PublicClientApplication } from "@azure/msal-browser";
import { MsalProvider } from "@azure/msal-react";
import StoreProvider from "./StoreProvider";
import { msalConfig } from "@/lib/auth/authConfig";
import { appWithTranslation } from "next-i18next";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900"
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900"
});

// export const metadata = {
// 	title: "Create Next App",
// 	description: "Generated by create next app",
// };

let languageStorage = "bg";
if (typeof window !== "undefined") {
  const languageStorageItem = localStorage.getItem("language");
  const languageStorageFound = languageStorageItem != null;

  if (languageStorageFound) languageStorage = languageStorageItem;
} else {
  console.warn(
    "Cannot save language setting to user, due to running on the server side!"
  );
}

i18n
  .use(HttpApi)
  .use(initReactI18next)
  .init({
    fallbackLng: "en",
    lng: languageStorage,
    debug: false,
    interpolation: {
      escapeValue: false
    },
    backend: {
      loadPath: "/locales/{{lng}}/common.json"
    }
  });

function RootLayout({ children }) {
  const msalInstance = new PublicClientApplication(msalConfig);

  return (
    <html lang={languageStorage}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <MsalProvider instance={msalInstance}>
          <StoreProvider>{children}</StoreProvider>
        </MsalProvider>
      </body>
    </html>
  );
}

export default appWithTranslation(RootLayout);
